steps:
  #######################################################################
  # 1 ▸ Build a lightweight test image and run the unit / smoke tests  #
  #######################################################################
  - name: gcr.io/cloud-builders/docker
    id: build-test-image
    args:
      [ 'build', '-t', 'local/grayst0-test:${SHORT_SHA}', '.' ]

  - name: local/grayst0-test:${SHORT_SHA}
    id: run-tests
    entrypoint: python
    args: [ '-m', 'pytest', '-q' ]          # exits 0 on pass, 1 on fail

  #######################################################################
  # 2 ▸ Pack the work-space, avoiding “file changed as we read it” bug  #
  #######################################################################
  - name: gcr.io/cloud-builders/gsutil
    id: pack-and-upload
    entrypoint: bash
    args:
      - -euxc
      - |
        tmp=/workspace/pkg.tgz
        tar --exclude .git -czf "$tmp" .          # write to tmp file
        mv "$tmp" /workspace/latest.tgz           # atomic rename

        echo "$SHORT_SHA" > /workspace/VERSION
        gsutil -q cp /workspace/latest.tgz gs://grayst0-deploy/latest.tgz
        gsutil -q cp /workspace/VERSION    gs://grayst0-deploy/VERSION

  #######################################################################
  # 3 ▸ Promote to “-prod” only after sandbox VM writes SMOKE_PASS      #
  #######################################################################
  - name: gcr.io/cloud-builders/gsutil
    id: promote-if-pass
    entrypoint: bash
    args:
      - -euxc
      - |
        # wait ≤5 min for SMOKE_PASS containing this SHA
        for _ in {1..30}; do
          if gsutil cat gs://grayst0-deploy/SMOKE_PASS 2>/dev/null \
               | grep -q "$SHORT_SHA"; then
            break
          fi
          sleep 10
        done

        # hard-fail if the SHA never appeared
        gsutil cat gs://grayst0-deploy/SMOKE_PASS | grep "$SHORT_SHA"

        # promote artefacts
        gsutil -q cp gs://grayst0-deploy/latest.tgz gs://grayst0-deploy/latest.tgz-prod
        echo "$SHORT_SHA" | gsutil -q cp - gs://grayst0-deploy/VERSION-prod

timeout: "1200s"
options:
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _PY_VERSION: "3.11"
