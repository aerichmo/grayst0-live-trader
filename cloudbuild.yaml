# ─────────────────────────────────────────────────────────────────────────────
# grayst0-live-trader — autonomous Cloud Build pipeline
# ─────────────────────────────────────────────────────────────────────────────
availableSecrets:
  secretManager:
    - versionName: projects/999946030108/secrets/GITHUB_PAT/versions/latest
      env: GITHUB_PAT            # becomes $GITHUB_PAT inside any step

logsBucket: gs://grayst0-build-logs
options: { substitutionOption: ALLOW_LOOSE }
timeout: 3600s

steps:
# ──────────────────────── 0 — build & smoke-test ────────────────────────────
- id: build-and-test
  name: python:3.11-slim
  entrypoint: bash
  args:
    - -ceu
    - |
        echo "📦 installing deps …"
        pip install --quiet pytest requests pyyaml -r requirements.txt
        echo "🧪 running smoke tests …"
        python -m pytest -q tests/smoke

# ───────────────────── 1 — archive workspace to GCS ──────────────────────────
- id: pack-and-upload
  name: gcr.io/cloud-builders/gsutil
  waitFor: [build-and-test]
  entrypoint: bash
  args:
    - -ceu
    - |
        echo "📦 archiving workspace …"
        TAR=/tmp/latest.tgz
        tar -czf "$${TAR}" --exclude=.git .
        gsutil cp "$${TAR}" gs://grayst0-deploy/latest.tgz
        echo "${SHORT_SHA}" > /tmp/VERSION
        gsutil cp /tmp/VERSION gs://grayst0-deploy/VERSION

# ──────────────── 2 — wait for sandbox OK, then promote ─────────────────────
- id: promote-if-pass
  name: gcr.io/cloud-builders/gsutil
  waitFor: [pack-and-upload]
  entrypoint: bash
  args:
    - -ceu
    - |
        echo "🚦 waiting for sandbox SMOKE_PASS …"
        for i in {1..30}; do
          if gsutil cat gs://grayst0-deploy/SMOKE_PASS 2>/dev/null | grep -q "${SHORT_SHA}"; then
            echo "✅ sandbox passed – promoting"
            gsutil cp gs://grayst0-deploy/latest.tgz gs://grayst0-deploy/latest.tgz-prod
            echo "${SHORT_SHA}" | gsutil cp - gs://grayst0-deploy/VERSION-prod
            exit 0
          fi
          sleep 10
        done
        echo "🛑 sandbox did not approve in time"; exit 1

# 3 ───────────────────────────────────────────────────────────────────────────
- id: make-and-commit-changes
  name: python:3.11-slim        # ← only this image line!
  waitFor: ['promote-if-pass']
  secretEnv: ['GITHUB_PAT']     # keeps the PAT injection

  entrypoint: bash
  args:
    - -ceu
    - |
        echo "🛠️  running auto-maintenance …"
        # GitHub CLI already installed in this snippet
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg \
          | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] \
          https://cli.github.com/packages stable main" \
          > /etc/apt/sources.list.d/github-cli.list
        apt-get update -qq && apt-get install -y gh

        export GITHUB_TOKEN="$GITHUB_PAT"
        pip install --quiet -r scripts/requirements-auto.txt
        ./scripts/auto-maintain.sh
