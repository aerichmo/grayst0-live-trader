# ─────────────────────────────────────────────────────────────────────────────
# grayst0‑live‑trader – autonomous Cloud Build pipeline
# ─────────────────────────────────────────────────────────────────────────────
availableSecrets:
  secretManager:
    - versionName: projects/$(PROJECT_ID)/secrets/GITHUB_PAT/versions/latest
      env: GITHUB_PAT

logsBucket: gs://grayst0-build-logs

options:
  substitutionOption: ALLOW_LOOSE
timeout: 3600s
# ─────────────────────────────────────────────────────────────────────────────
# secretEnv: single GitHub PAT (read‑only token works if you only open PRs)
# ─────────────────────────────────────────────────────────────────────────────
steps:
# ──────────────────────────────────────────────────────────────────────────────
# 0. Build & smoke-test
# ──────────────────────────────────────────────────────────────────────────────
- id: build-and-test
  name: python:3.11-slim
  entrypoint:
  args:
    - -ceu
    - |
        set -euo pipefail
        echo "📦 installing deps …"
        pip install --quiet pytest requests pyyaml -r requirements.txt
        echo "🧪 running smoke tests …"
        python -m pytest -q tests/smoke
# 1 ───────────────────────────────────────────────────────────────────────────
- id: pack-and-upload
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['build-and-test']
  entrypoint:
  args:
    - -ceu
    - |
      echo "📦 archiving workspace …"
      TAR=/tmp/latest.tgz
      tar -czf "$$TAR" --exclude=.git .
      gsutil cp "$$TAR"          gs://grayst0-deploy/latest.tgz
      echo "${SHORT_SHA}" > /tmp/VERSION
      gsutil cp /tmp/VERSION    gs://grayst0-deploy/VERSION
# 2 ───────────────────────────────────────────────────────────────────────────
- id: promote-if-pass
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['pack-and-upload']
  entrypoint:
  args:
    - -ceu
    - |
      echo "🚦 waiting for sandbox SMOKE_PASS …"
      for i in {1..30}; do
        if gsutil cat gs://grayst0-deploy/SMOKE_PASS 2>/dev/null \
           | grep -q "${SHORT_SHA}"; then
          echo "✅ sandbox passed – promoting"
          gsutil cp gs://grayst0-deploy/latest.tgz gs://grayst0-deploy/latest.tgz-prod
          echo "${SHORT_SHA}" | gsutil cp - gs://grayst0-deploy/VERSION-prod
          exit 0
        fi
        sleep 10
      done
      echo "🛑 sandbox did not approve in time"; exit 1
# 3 ───────────────────────────────────────────────────────────────────────────
- id: make-and-commit-changes
  name: python:3.11-slim
  waitFor: ['promote-if-pass']
  entrypoint:
  env:
  - GITHUB_PAT=$$GITHUB_PAT
    - GIT_AUTHOR_NAME=cloudbuild
    - GIT_AUTHOR_EMAIL=ci@grayst0
    - GIT_COMMITTER_NAME=cloudbuild
    - GIT_COMMITTER_EMAIL=ci@grayst0
  args:
    - -ceu
    - |
      echo "🛠️ running auto‑maintenance …"
      export GITHUB_TOKEN="$$GITHUB_PAT"   # token for gh cli / git pushes
      pip install --quiet -r scripts/requirements-auto.txt
      ./scripts/auto-maintain.sh
images: []
