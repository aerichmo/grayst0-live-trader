# ────────────────────────────────────────────────────────────────────────────────
#  Cloud Build pipeline for grayst0-live-trader — autonomous & self-healing
# ────────────────────────────────────────────────────────────────────────────────
logsBucket: gs://grayst0-build-logs-1746335095     # bucket already exists

options:
  substitutionOption: ALLOW_LOOSE                 # unknown _VARS won’t break

# ─── Secrets ────────────────────────────────────────────────────────────────────
availableSecrets:
  secretManager:
    - versionName: projects/$(PROJECT_ID)/secrets/GITHUB_PAT/versions/latest
      env: GITHUB_PAT                              # becomes $GITHUB_PAT at runtime

# ─── Build steps ────────────────────────────────────────────────────────────────
steps:
# 0. Smoke-test in a clean Python 3.11 container
- id: build-and-test
  name: python:3.11-slim
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "📦 installing deps …"
      pip install --quiet --no-cache-dir pytest requests pyyaml -r requirements.txt
      echo "🧪 running smoke tests …"
      python -m pytest -q tests/smoke/

# 1. Archive workspace → latest.tgz + VERSION
- id: pack-and-upload
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['build-and-test']
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "📦 archiving workspace …"
      TMP_TGZ="/tmp/latest.tgz"
      tar -czf "$$TMP_TGZ" --exclude=.git .
      gsutil cp "$$TMP_TGZ" gs://grayst0-deploy/latest.tgz
      echo "$$SHORT_SHA" > /tmp/VERSION
      gsutil cp /tmp/VERSION gs://grayst0-deploy/VERSION

# 2. Gate → promote only after sandbox posts SMOKE_PASS
- id: promote-if-pass
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['pack-and-upload']
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "🚦 waiting for sandbox SMOKE_PASS …"
      for i in {1..30}; do
        if gsutil cat gs://grayst0-deploy/SMOKE_PASS 2>/dev/null | grep -q "$$SHORT_SHA"; then
          echo "✅ sandbox passed – promoting"
          gsutil cp gs://grayst0-deploy/latest.tgz gs://grayst0-deploy/latest.tgz-prod
          echo "$$SHORT_SHA" | gsutil cp - gs://grayst0-deploy/VERSION-prod
          exit 0
        fi
        sleep 10
      done
      echo "🛑 sandbox did not approve within 5 min"; exit 1

# 3. Auto-maintenance & auto-commit back to GitHub
- id: auto-maintain
  name: python:3.11-slim
  waitFor: ['promote-if-pass']
  entrypoint: bash
  env:
    - GITHUB_PAT=$$GITHUB_PAT
    - GIT_AUTHOR_NAME=cloudbuild
    - GIT_AUTHOR_EMAIL=ci@grayst0
    - GIT_COMMITTER_NAME=cloudbuild
    - GIT_COMMITTER_EMAIL=ci@grayst0
  args:
    - -ceu
    - |
      echo "🛠️  running auto-maintenance …"
      export GITHUB_TOKEN="$$GITHUB_PAT"
      pip install --quiet -r scripts/requirements-auto.txt
      ./scripts/auto-maintain.sh

# ─── No container images are produced ───────────────────────────────────────────
images: []

# ─── Handy custom var ───────────────────────────────────────────────────────────
substitutions:
  _DEPLOY_BUCKET: gs://grayst0-deploy
