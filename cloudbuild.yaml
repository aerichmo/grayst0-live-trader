# ---------------------------------------------------------------------------
# Cloud Build pipeline for grayst0-live-trader  (fully self-healing)
# ---------------------------------------------------------------------------

logsBucket: gs://grayst0-build-logs-1746335095   # dedicated build-log bucket

options:
  substitutionOption: ALLOW_LOOSE               # ignore unknown _VARS

steps:
##############################################################################
# 0. Run smoke tests in a clean Python 3.11 environment
##############################################################################
- id: build-and-test
  name: python:3.11-slim
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "📦 installing deps …"
      pip install --quiet --no-cache-dir pytest requests pyyaml -r requirements.txt
      echo "🧪 running smoke tests …"
      pytest -q tests/smoke

##############################################################################
# 1. Tar the workspace and upload artefact + VERSION
##############################################################################
- id: pack-and-upload
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['build-and-test']
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "📦  archiving workspace …"
      TMPFILE="/tmp/latest.tgz"          # shell var -> escape next line
      tar -czf "$$TMPFILE" --exclude=.git .
      gsutil cp "$$TMPFILE" gs://grayst0-deploy/latest.tgz
      printf '%s\n' "$SHORT_SHA" > /tmp/VERSION
      gsutil cp /tmp/VERSION gs://grayst0-deploy/VERSION

##############################################################################
# 2. Wait for sandbox to write SMOKE_PASS, then promote to “prod”
##############################################################################
- id: promote-if-pass
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['pack-and-upload']
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "🚦 waiting for sandbox SMOKE_PASS …"
      for _ in {1..30}; do            # up to 5 min
        if gsutil cat gs://grayst0-deploy/SMOKE_PASS 2>/dev/null | grep -q "$SHORT_SHA"; then
          echo "✅ sandbox passed – promoting"
          gsutil cp gs://grayst0-deploy/latest.tgz gs://grayst0-prod/latest.tgz
          printf 'prod-OK %s\n' "$SHORT_SHA" | gsutil cp - gs://grayst0-deploy/PROD_PASS
          exit 0
        fi
        sleep 10
      done
      echo "🛑 sandbox did not approve within 5 min"; exit 1

##############################################################################
# 3. Auto-maintenance step (runs only after prod promotion)
##############################################################################
- id: auto-maintain
  name: python:3.11-slim
  waitFor: ['promote-if-pass']
  entrypoint: bash
  env:
    - GIT_AUTHOR_NAME=cloudbuild
    - GIT_AUTHOR_EMAIL=ci@grayst0
    - GIT_COMMITTER_NAME=cloudbuild
    - GIT_COMMITTER_EMAIL=ci@grayst0
  secretEnv: ['GITHUB_PAT']           # GitHub token from Secret Manager
  args:
    - -ceu
    - |
      pip install --quiet -r scripts/requirements-auto.txt
      ./scripts/auto-maintain.sh      # script creates commits/PRs as needed

secrets:
- kmsKeyName: projects/grayst0/.../cryptoKeys/...    # (leave as-is, auto-filled)
  secretEnv:
    GITHUB_PAT: projects/grayst0/secrets/GITHUB_PAT/versions/latest

images: []        # nothing pushed to Artifact Registry
