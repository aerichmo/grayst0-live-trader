###############################################################################
# Cloud Build ¬∑ grayst0-live-trader  (autonomous pipeline)
###############################################################################
logsBucket: gs://grayst0-build-logs-1746335095
options:
  substitutionOption: ALLOW_LOOSE

# ‚îÄ‚îÄ‚îÄ Secret injection ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
availableSecrets:
  secretManager:
    - versionName: projects/$(PROJECT_ID)/secrets/GITHUB_PAT/versions/latest
      env: GITHUB_PAT                  # arrives as $$GITHUB_PAT

###############################################################################
steps:

# 0 ‚îÄ Smoke-test
- id: build-and-test
  name: python:3.11-slim
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "üì¶ installing deps ‚Ä¶"
      pip install --quiet --no-cache-dir pytest requests pyyaml -r requirements.txt
      echo "üß™ running smoke tests ‚Ä¶"
      pytest -q tests/smoke

# 1 ‚îÄ Archive artefact
- id: pack-and-upload
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['build-and-test']
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "üì¶  archiving workspace ‚Ä¶"
      TMPFILE="/tmp/latest.tgz"
      tar -czf "$$TMPFILE" --exclude=.git .
      gsutil cp "$$TMPFILE" gs://grayst0-deploy/latest.tgz
      printf '%s\n' "$$SHORT_SHA" > /tmp/VERSION
      gsutil cp /tmp/VERSION gs://grayst0-deploy/VERSION

# 2 ‚îÄ Promote after sandbox pass
- id: promote-if-pass
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['pack-and-upload']
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "üö¶ waiting for sandbox SMOKE_PASS ‚Ä¶"
      for _ in {1..30}; do
        gsutil cat gs://grayst0-deploy/SMOKE_PASS 2>/dev/null | grep -q "$$SHORT_SHA" && break
        sleep 10
      done
      if gsutil cat gs://grayst0-deploy/SMOKE_PASS 2>/dev/null | grep -q "$$SHORT_SHA"; then
        echo "‚úÖ sandbox passed ‚Äì promoting"
        gsutil cp gs://grayst0-deploy/latest.tgz gs://grayst0-deploy/latest.tgz-prod
        printf 'prod-OK %s\n' "$$SHORT_SHA" | gsutil cp - gs://grayst0-deploy/PROD_PASS
      else
        echo "üõë sandbox did not approve within 5 min" ; exit 1
      fi

# 3 ‚îÄ Auto-maintenance + self-commit
- id: auto-maintain-and-commit
  name: python:3.11-slim
  waitFor: ['promote-if-pass']
  entrypoint: bash
  env:
    - GITHUB_PAT                      # declare usage
    - GIT_AUTHOR_NAME=cloudbuild
    - GIT_AUTHOR_EMAIL=ci@grayst0
    - GIT_COMMITTER_NAME=cloudbuild
    - GIT_COMMITTER_EMAIL=ci@grayst0
  args:
    - -ceu
    - |
      echo "üõ†Ô∏è  running auto-maintenance ‚Ä¶"
      export GITHUB_TOKEN="$$GITHUB_PAT"    # **escaped**
      pip install --quiet -r scripts/requirements-auto.txt
      ./scripts/auto-maintain.sh

images: []          # nothing to push
###############################################################################
