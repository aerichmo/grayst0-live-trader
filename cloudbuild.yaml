# ---------------------------------------------------------------------------
# Cloud Build pipeline for grayst0-live-trader  (fully self-healing)
# ---------------------------------------------------------------------------

logsBucket: gs://grayst0-build-logs-1746335095

options:
  substitutionOption: ALLOW_LOOSE

steps:
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
- id: build-and-test
  name: python:3.11-slim
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "ðŸ“¦ installing deps â€¦"
      pip install --quiet --no-cache-dir pytest requests pyyaml -r requirements.txt
      echo "ðŸ§ª running smoke tests â€¦"
      pytest -q tests/smoke
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
- id: pack-and-upload
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['build-and-test']
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "ðŸ“¦ archiving workspace â€¦"
      TMPFILE="/tmp/latest.tgz"
      tar -czf "$$TMPFILE" --exclude=.git .
      gsutil cp "$$TMPFILE" gs://grayst0-deploy/latest.tgz
      printf '%s\n' "$SHORT_SHA" > /tmp/VERSION
      gsutil cp /tmp/VERSION gs://grayst0-deploy/VERSION
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
- id: promote-if-pass
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['pack-and-upload']
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "ðŸš¦ waiting for sandbox SMOKE_PASS â€¦"
      for _ in {1..30}; do
        if gsutil cat gs://grayst0-deploy/SMOKE_PASS 2>/dev/null | grep -q "$SHORT_SHA"; then
          echo "âœ… sandbox passed â€“ promoting"
          gsutil cp gs://grayst0-deploy/latest.tgz gs://grayst0-prod/latest.tgz
          printf 'prod-OK %s\n' "$SHORT_SHA" | gsutil cp - gs://grayst0-deploy/PROD_PASS
          exit 0
        fi
        sleep 10
      done
      echo "ðŸ›‘ sandbox did not approve within 5 min"; exit 1
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
- id: auto-maintain
  name: python:3.11-slim
  waitFor: ['promote-if-pass']
  entrypoint: bash
  env:
    - GIT_AUTHOR_NAME=cloudbuild
    - GIT_AUTHOR_EMAIL=ci@grayst0
    - GIT_COMMITTER_NAME=cloudbuild
    - GIT_COMMITTER_EMAIL=ci@grayst0
  secretEnv: ['GITHUB_PAT']
  args:
    - -ceu
    - |
      pip install --quiet -r scripts/requirements-auto.txt
      ./scripts/auto-maintain.sh

images: []

# ---------------------------------------------------------------------------
# Inject GitHub token from Secret Manager (no KMS needed)
# ---------------------------------------------------------------------------
availableSecrets:
  secretManager:
  - versionName: projects/grayst0/secrets/GITHUB_PAT/versions/latest
    env: GITHUB_PAT
