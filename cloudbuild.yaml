# ─────────────────────────────────────────────────────────────────────────────
#  Cloud Build pipeline · grayst0-live-trader
# ─────────────────────────────────────────────────────────────────────────────

logsBucket: gs://grayst0-build-logs-1746335095   # build logs land here

options:
  substitutionOption: ALLOW_LOOSE               # ignore unknown ${_VARS}

# ---------------------------------------------------------------------------
# Secrets (GitHub PAT for auto-maintenance commits)
# ---------------------------------------------------------------------------
availableSecrets:
  secretManager:
    - versionName: projects/grayst0/secrets/GITHUB_PAT/versions/1
      env: GITHUB_PAT

# ---------------------------------------------------------------------------
# Build steps
# ---------------------------------------------------------------------------
steps:

##############################################################################
# 0  Run smoke tests in a clean Python 3.11 image
##############################################################################
- id: build-and-test
  name: python:3.11-slim
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "📦 installing deps …"
      pip install --quiet --no-cache-dir pytest requests pyyaml -r requirements.txt
      echo "🧪 running smoke tests …"
      python -m pytest -q tests/smoke/

##############################################################################
# 1  Archive workspace → gs://grayst0-deploy/latest.tgz  (+ VERSION file)
##############################################################################
- id: pack-and-upload
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['build-and-test']
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "📦 archiving workspace …"
      TMPFILE="/tmp/latest.tgz"
      tar -czf "$${TMPFILE}" --exclude=.git .
      gsutil cp "$${TMPFILE}" ${_DEPLOY_BUCKET}/latest.tgz
      echo "${SHORT_SHA}" | gsutil cp - ${_DEPLOY_BUCKET}/VERSION

##############################################################################
# 2  Wait for sandbox SMOKE_PASS → promote artefact to “prod”
##############################################################################
- id: promote-if-pass
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['pack-and-upload']
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "🚦 waiting for sandbox SMOKE_PASS …"
      for n in {1..30}; do
        if gsutil cat ${_DEPLOY_BUCKET}/SMOKE_PASS 2>/dev/null | grep -q "${SHORT_SHA}"; then
          echo "✅ sandbox passed – promoting"
          gsutil cp ${_DEPLOY_BUCKET}/latest.tgz       ${_DEPLOY_BUCKET}/latest.tgz-prod
          echo "${SHORT_SHA}" | gsutil cp -            ${_DEPLOY_BUCKET}/VERSION-prod
          exit 0
        fi
        sleep 10
      done
      echo "🛑 sandbox did not approve within 5 min"
      exit 1

##############################################################################
# 3  Run auto-maintenance script & push (uses GITHUB_PAT secret)
##############################################################################
- id: make-and-commit-changes
  name: python:3.11-slim
  waitFor: ['promote-if-pass']
  secretEnv: ['GITHUB_PAT']
  entrypoint: bash
  env:
    - GIT_AUTHOR_NAME=cloudbuild
    - GIT_AUTHOR_EMAIL=ci@grayst0
    - GIT_COMMITTER_NAME=cloudbuild
    - GIT_COMMITTER_EMAIL=ci@grayst0
  args:
    - -ceu
    - |
      echo "🤖 running auto-maintenance …"
      pip install --quiet --no-cache-dir -r scripts/requirements-auto.txt
      ./scripts/auto-maintain.sh

      if ! git diff --quiet; then
        echo "📑 committing generated changes …"
        git config --global --add safe.directory /workspace
        git add -A
        git commit -m "ci: automated maintenance by Cloud Build (${SHORT_SHA})"
        git push "https://${GITHUB_PAT}:x-oauth-basic@github.com/${REPO_FULL_NAME}.git" HEAD:main
      else
        echo "✨ nothing to commit"
      fi

# ---------------------------------------------------------------------------
# No container images produced
# ---------------------------------------------------------------------------
images: []

# ---------------------------------------------------------------------------
# Handy custom substitutions
# ---------------------------------------------------------------------------
substitutions:
  _DEPLOY_BUCKET: gs://grayst0-deploy
  _PY_VERSION: "3.11"
