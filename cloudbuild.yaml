# ---------------------------------------------------------------------------
# Cloud Build pipeline for grayst0-live-trader (self-healing + auto-commit)
# ---------------------------------------------------------------------------

# 1. Send all build logs to your dedicated bucket
logsBucket: gs://grayst0-build-logs

# 2. Allow unknown substitutions without breaking the build
options:
  substitutionOption: ALLOW_LOOSE

steps:

  ##############################################################################
  # 0. Run smoke tests in a clean Python 3.11 environment
  ##############################################################################
  - id: build-and-test
    name: python:3.11-slim
    entrypoint: bash
    args:
      - -ceu
      - |
        echo "üì¶ installing deps ‚Ä¶"
        pip install --quiet --no-cache-dir pytest requests pyyaml -r requirements.txt
        echo "üß™ running smoke tests ‚Ä¶"
        python -m pytest -q tests/smoke/

  ##############################################################################
  # 1. Archive the workspace ‚Üí gs://grayst0-deploy/latest.tgz + VERSION
  ##############################################################################
  - id: pack-and-upload
    name: gcr.io/cloud-builders/gsutil
    entrypoint: bash
    args:
      - -ceu
      - |
        echo "üì¶ archiving workspace ‚Ä¶"
        TMP_TGZ="/tmp/latest.tgz"
        tar -czf "$TMP_TGZ" --exclude=.git .
        echo "$SHORT_SHA" > /tmp/VERSION
        gsutil cp "$TMP_TGZ"    ${_DEPLOY_BUCKET}/latest.tgz
        gsutil cp /tmp/VERSION  ${_DEPLOY_BUCKET}/VERSION

  ##############################################################################
  # 2. Wait for sandbox SMOKE_PASS ‚Üí promote to prod
  ##############################################################################
  - id: promote-if-pass
    name: gcr.io/cloud-builders/gsutil
    waitFor: ['pack-and-upload']
    entrypoint: bash
    args:
      - -ceu
      - |
        echo "üö¶ waiting for sandbox SMOKE_PASS ‚Ä¶"
        for i in {1..30}; do
          if gsutil cat ${_DEPLOY_BUCKET}/SMOKE_PASS 2>/dev/null \
               | grep -q "$SHORT_SHA"; then
            echo "‚úÖ sandbox passed ‚Äì promoting"
            gsutil cp ${_DEPLOY_BUCKET}/latest.tgz    ${_DEPLOY_BUCKET}/latest.tgz-prod
            echo "$SHORT_SHA" \
              | gsutil cp -                       ${_DEPLOY_BUCKET}/VERSION-prod
            exit 0
          fi
          sleep 10
        done
        echo "üõë sandbox did not approve within 5 min"
        exit 1

  ##############################################################################
  # 3. Run auto-maintenance and push any changes back to main
  ##############################################################################
  - id: make-and-commit-changes
    name: python:3.11-slim
    waitFor: ['promote-if-pass']
    # fetch your GITHUB_PAT from Secret Manager
    secretEnv: ['GITHUB_PAT']
    env:
      - 'GITHUB_TOKEN=${GITHUB_PAT}'
      - 'GIT_AUTHOR_NAME=cloudbuild'
      - 'GIT_AUTHOR_EMAIL=ci@grayst0'
      - 'GIT_COMMITTER_NAME=cloudbuild'
      - 'GIT_COMMITTER_EMAIL=ci@grayst0'
    entrypoint: bash
    args:
      - -ceu
      - |
        echo "üì¶ installing auto-maintain deps ‚Ä¶"
        pip install --quiet --no-cache-dir -r scripts/requirements-auto.txt

        echo "ü§ñ running auto-maintain ‚Ä¶"
        ./scripts/auto-maintain.sh

        # if anything changed, commit & push directly to main
        if [[ -n "$(git status --porcelain)" ]]; then
          echo "‚úèÔ∏è  committing changes ‚Ä¶"
          git config user.name  "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"
          git add .
          git commit -m "chore: auto-maintenance updates [skip ci]"

          echo "üöÄ pushing to main ‚Ä¶"
          git push "https://${GITHUB_TOKEN}@github.com/aerichmo/grayst0-live-trader.git" \
                   HEAD:main
        else
          echo "‚úÖ no changes to commit"
        fi

# ---------------------------------------------------------------------------
# Nothing to build into a container image
# ---------------------------------------------------------------------------
images: []

# ---------------------------------------------------------------------------
# Custom substitutions
# ---------------------------------------------------------------------------
substitutions:
  _DEPLOY_BUCKET: gs://grayst0-deploy
