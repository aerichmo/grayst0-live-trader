# ─────────────────────────────────────────────────────────────
#  grayst0-live-trader  •  fully-autonomous Cloud Build
# ─────────────────────────────────────────────────────────────

logsBucket: gs://grayst0-build-logs-1746335095

options:
  substitutionOption: ALLOW_LOOSE          # ignore unknown _VARS

# ░░ Secrets  ░░───────────────────────────────────────────────
availableSecrets:
  secretManager:
    - versionName: projects/$(PROJECT_ID)/secrets/GITHUB_PAT/versions/latest
      env: GITHUB_PAT                     # becomes $GITHUB_PAT in steps

# ░░ Steps  ░░─────────────────────────────────────────────────
steps:

# 0 - tests ───────────────────────────────────────────────────
- id: build-and-test
  name: python:3.11-slim
  entrypoint: bash
  args:
    - -uec
    - |
      echo "📦 installing deps …"
      pip install --quiet -r requirements.txt
      echo "🧪 running smoke tests …"
      pytest -q tests/smoke

# 1 - archive to sandbox bucket ───────────────────────────────
- id: pack-and-upload
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['build-and-test']
  entrypoint: bash
  args:
    - -uec
    - |
      echo "📦 archiving workspace …"
      TGZ=/tmp/latest.tgz
      tar -czf "${TGZ}" --exclude=.git .
      echo "$SHORT_SHA" > /tmp/VERSION
      gsutil cp "${TGZ}" gs://grayst0-deploy/latest.tgz
      gsutil cp /tmp/VERSION gs://grayst0-deploy/VERSION

# 2 - promote after sandbox pass ──────────────────────────────
- id: promote-if-pass
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['pack-and-upload']
  entrypoint: bash
  args:
    - -uec
    - |
      echo "🚦 waiting for sandbox SMOKE_PASS …"
      for i in {1..30}; do
        if gsutil cat gs://grayst0-deploy/SMOKE_PASS 2>/dev/null \
             | grep -q "$SHORT_SHA"; then
          echo "✅ sandbox passed – promoting"
          gsutil cp gs://grayst0-deploy/latest.tgz gs://grayst0-deploy/latest.tgz-prod
          echo "$SHORT_SHA" | gsutil cp - gs://grayst0-deploy/VERSION-prod
          exit 0
        fi
        sleep 10
      done
      echo "🛑 sandbox did not approve within 5 min"
      exit 1

# 3 - auto-maintenance commit back to GitHub ──────────────────
- id: auto-maintain
  name: python:3.11-slim
  waitFor: ['promote-if-pass']
  entrypoint: bash
  env:
    - GIT_AUTHOR_NAME=cloudbuild
    - GIT_AUTHOR_EMAIL=ci@grayst0
    - GIT_COMMITTER_NAME=cloudbuild
    - GIT_COMMITTER_EMAIL=ci@grayst0
  args:
    - -uec
    - |
      echo "🛠️  running auto-maintenance …"
      export GITHUB_TOKEN="$GITHUB_PAT"        # ← secret available here
      pip install --quiet -r scripts/requirements-auto.txt
      ./scripts/auto-maintain.sh

images: []   # nothing is pushed
