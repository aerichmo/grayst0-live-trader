# ─────────────────────────────────────────────────────────────────────────────
# grayst0-live-trader — autonomous Cloud Build pipeline
# ─────────────────────────────────────────────────────────────────────────────
availableSecrets:
  secretManager:
    - versionName: projects/999946030108/secrets/GITHUB_PAT/versions/latest
      env: GITHUB_PAT

logsBucket: gs://grayst0-build-logs
options: { substitutionOption: ALLOW_LOOSE }
timeout: 3600s

steps:
# ──────────────────────── 0 — build & smoke-test ────────────────────────────
- id: build-and-test
  name: python:3.11-slim
  entrypoint: bash
  args:
    - -ceu
    - |
        echo "📦 installing deps …"
        pip install --quiet pytest requests pyyaml -r requirements.txt
        echo "🧪 running smoke tests …"
        python -m pytest -q tests/smoke

# ───────────────────── 1 — archive workspace to GCS ──────────────────────────
- id: pack-and-upload
  name: gcr.io/cloud-builders/gsutil
  waitFor: [build-and-test]
  entrypoint: bash
  args:
    - -ceu
    - |
        echo "📦 archiving workspace …"
        TAR=/tmp/latest.tgz
        tar -czf "$$TAR" .
        gsutil cp "$${TAR}" gs://grayst0-deploy/latest.tgz
        echo "${SHORT_SHA}" > /tmp/VERSION
        gsutil cp /tmp/VERSION gs://grayst0-deploy/VERSION

# ──────────────── 2 — wait for sandbox OK, then promote ─────────────────────
- id: promote-if-pass
  name: gcr.io/cloud-builders/gsutil
  waitFor: [pack-and-upload]
  entrypoint: bash
  args:
    - -ceu
    - |
        echo "🚦 waiting for sandbox SMOKE_PASS …"
        for i in {1..30}; do
          if gsutil cat gs://grayst0-deploy/SMOKE_PASS 2>/dev/null | grep -q "${SHORT_SHA}"; then
            echo "✅ sandbox passed – promoting"
            gsutil cp gs://grayst0-deploy/latest.tgz gs://grayst0-deploy/latest.tgz-prod
            echo "${SHORT_SHA}" | gsutil cp - gs://grayst0-deploy/VERSION-prod
            exit 0
          fi
          sleep 10
        done
        echo "🛑 sandbox did not approve in time"; exit 1

# ───────────────────────────── 3 - auto-maintain & push fixes ─────────────────────────────
- id: make-and-commit-changes
  name: python:3.11
  waitFor: ['promote-if-pass']
  secretEnv: ['GITHUB_PAT']           # GITHUB_PAT comes from availableSecrets⭡
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "🛠️  running auto-maintenance …"

      # minimal tooling we need
      apt-get update -qq \
        && apt-get install -y --no-install-recommends curl gnupg git

      # python formatters / sorters
      pip install --quiet --upgrade black isort ruamel.yaml

      # run the formatters
      black .   --quiet
      isort .   --quiet

      # commit & push if anything changed
      if [[ -n "$(git status --porcelain)" ]]; then
        echo "📄 committing code-style fixes"
        git config --global --add safe.directory /workspace
        git config user.name  "cloudbuild-bot"
        git config user.email "ci@grayst0"

        # replace SSH remote with HTTPS remote that contains the PAT
        git remote set-url origin \
          "https://${GITHUB_PAT}@github.com/aerichmo/grayst0-live-trader.git"

        git add -A
        git commit -m "style: automated formatting by Cloud Build"
        git push origin HEAD:autofix/manual
      else
        echo "✅ nothing to fix"
      fi
