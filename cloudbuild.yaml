# ──────────────────────────────────────────────────────────────────────────────
# Cloud Build pipeline for grayst0‑live‑trader
# ──────────────────────────────────────────────────────────────────────────────
logsBucket: gs://grayst0-build-logs-1746335095
options:
  substitutionOption: ALLOW_LOOSE
timeout: 3600s
# ──────────────────────────────────────────────────────────────────────────────

# Secret → env
availableSecrets:
  secretManager:
    - versionName: projects/$(PROJECT_ID)/secrets/GITHUB_PAT/versions/latest
      env: GITHUB_PAT          # becomes $GITHUB_PAT ($$GITHUB_PAT inside scripts)

# ────────────────────────────── build steps ───────────────────────────────────
steps:
###############################################################################
# 0. Run smoke tests in a clean Python image
###############################################################################
- id: build-and-test
  name: python:3.11-slim
  entrypoint: bash
  args:
    - -euo
    - |
      echo "📦 installing deps …"
      pip install --quiet pytest requests pyyaml -r requirements.txt
      echo "🧪 running smoke tests …"
      pytest -q tests/smoke
###############################################################################
# 1. Archive workspace → gs://grayst0-deploy/{latest.tgz,VERSION}
###############################################################################
- id: pack-and-upload
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['build-and-test']
  entrypoint: bash
  args:
    - -euo
    - |
      COMMIT=$SHORT_SHA
      echo "📦 archiving workspace …"
      tar -czf /tmp/latest.tgz --exclude=.git .
      echo "$COMMIT" >/tmp/VERSION
      gsutil cp /tmp/latest.tgz gs://grayst0-deploy/latest.tgz
      gsutil cp /tmp/VERSION    gs://grayst0-deploy/VERSION
###############################################################################
# 2. Wait for sandbox VM to post SMOKE_PASS, then promote to “prod”
###############################################################################
- id: promote-if-pass
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['pack-and-upload']
  entrypoint: bash
  args:
    - -euo
    - |
      echo "🚦 waiting for sandbox SMOKE_PASS …"
      for i in {1..30}; do
        if gsutil cat gs://grayst0-deploy/SMOKE_PASS 2>/dev/null | grep -q "$SHORT_SHA"; then
          echo "✅ sandbox passed – promoting"
          gsutil cp gs://grayst0-deploy/latest.tgz gs://grayst0-deploy/latest.tgz-prod
          echo "$SHORT_SHA" | gsutil cp - gs://grayst0-deploy/VERSION-prod
          exit 0
        fi
        sleep 10
      done
      echo "🛑 sandbox did not approve within 5 min" && exit 1
###############################################################################
# 3. Auto‑maintenance + auto‑commit back to GitHub (main branch)
###############################################################################
- id: make-and-commit-changes
  name: python:3.11-slim
  waitFor: ['promote-if-pass']
  entrypoint: bash
  env:
    - GITHUB_PAT=$$GITHUB_PAT      # <── REQUIRED KEY=VALUE form
    - GIT_AUTHOR_NAME=cloudbuild
    - GIT_AUTHOR_EMAIL=ci@grayst0
    - GIT_COMMITTER_NAME=cloudbuild
    - GIT_COMMITTER_EMAIL=ci@grayst0
  args:
    - -euo
    - |
      echo "🛠️ running auto‑maintenance …"
      export GITHUB_TOKEN="$$GITHUB_PAT"
      pip install --quiet -r scripts/requirements-auto.txt
      ./scripts/auto-maintain.sh
# ──────────────────────────────────────────────────────────────────────────────
images: []
