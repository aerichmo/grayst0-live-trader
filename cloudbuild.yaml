# ──────────────────────────────────────────────────────────────────────────────
# Cloud Build pipeline for grayst0-live-trader
# ──────────────────────────────────────────────────────────────────────────────

# Send structured logs to the dedicated bucket (already IAM-granted).
logsBucket: gs://grayst0-build-logs-1746335095

options:
  substitutionOption: ALLOW_LOOSE     # unknown _VARS won’t break the build

# ──────────────────────────────  BUILD STEPS  ────────────────────────────────
steps:

###############################################################################
# 0. Run smoke tests in a clean Python 3.11 environment
###############################################################################
- id: build-and-test
  name: python:3.11-slim
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "📦 installing deps …"
      pip install --quiet --no-cache-dir pytest requests pyyaml -r requirements.txt
      echo "🧪 running smoke tests …"
      python -m pytest -q tests/smoke/

###############################################################################
# 1. Archive the workspace → gs://grayst0-deploy  (latest.tgz + VERSION)
###############################################################################
- id: pack-and-upload
  name: gcr.io/cloud-builders/gsutil
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "📦  archiving workspace …"
      TMP_TGZ="/tmp/latest.tgz"
      tar -czf "$$TMP_TGZ" --exclude=.git .
      echo "$COMMIT_SHA" > /tmp/VERSION
      gsutil cp "$$TMP_TGZ" gs://grayst0-deploy/latest.tgz
      gsutil cp /tmp/VERSION gs://grayst0-deploy/VERSION

###############################################################################
# 2. Wait for sandbox VM → on SMOKE_PASS promote artefact to “prod”
###############################################################################
- id: promote-if-pass
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['pack-and-upload']
  entrypoint: bash
  args:
    - -ceu
    - |
      echo "🚦 waiting for sandbox SMOKE_PASS …"
      for i in {1..30}; do            # 5 minutes max
        if gsutil cat gs://grayst0-deploy/SMOKE_PASS 2>/dev/null \
             | grep -q "$SHORT_SHA"; then
          echo "✅ sandbox passed – promoting"
          gsutil cp gs://grayst0-deploy/latest.tgz \
                    gs://grayst0-prod/latest.tgz
          printf 'prod-OK %s\n' "$SHORT_SHA" \
            | gsutil cp - gs://grayst0-deploy/PROD_PASS
          exit 0
        fi
        sleep 10
      done
      echo "🛑 sandbox did not approve within 5 min"
      exit 1

# ───────────────────────────  NO DOCKER IMAGES  ──────────────────────────────
images: []

# Optional custom substitutions (currently unused)
substitutions:
  _PY_VERSION: "3.11"
