# .github/workflows/bootstrap.yml
name: GCP bootstrap & deploy

on:
  push:
    branches: [ main ]
    paths-ignore: [ '**/*.md' ]

permissions:
  contents: read
  id-token: write

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: grayst0
      VM_NAME: gs-live-trader
      VM_ZONE: us-central1-a
      SA_NAME: gs-trader

    steps:
    - name: ⬇️  Checkout repo
      uses: actions/checkout@v4

    - name: 🔐  Auth to GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: ⚙️  Enable Cloud APIs
      run: |
        gcloud services enable iam.googleapis.com compute.googleapis.com \
          bigquery.googleapis.com secretmanager.googleapis.com logging.googleapis.com

    - name: 👤  Ensure service-account
      run: |
        gcloud iam service-accounts list \
          --format='value(email)' \
          --filter="email:${SA_NAME}@${PROJECT_ID}.iam.gserviceaccount.com" \
        || gcloud iam service-accounts create "${SA_NAME}" \
             --display-name="Graystone Trader"

    - name: 🗝️  Grant BigQuery dataEditor
      run: |
        gcloud projects add-iam-policy-binding "$PROJECT_ID" \
          --member="serviceAccount:${SA_NAME}@${PROJECT_ID}.iam.gserviceaccount.com" \
          --role="roles/bigquery.dataEditor" || true

    - name: 🔑  Store Tradier secrets
      run: |
        printf '%s' '${{ secrets.TRADIER_TOKEN }}' | \
          gcloud secrets create tradier-token --replication-policy=automatic --data-file=- || true
        printf '%s' '${{ secrets.TRADIER_ACCT }}' | \
          gcloud secrets create tradier-acct --replication-policy=automatic --data-file=- || true

    - name: 🗄️  BigQuery schema
      run: |
        if ! bq ls --format=csv | grep -q '^us_trading,' ; then
          bq --location=US mk -d us_trading
        fi
        bq query --use_legacy_sql=false <<'SQL'
        CREATE TABLE IF NOT EXISTS grayst0.us_trading.trade_log (
          ts TIMESTAMP, symbol STRING, side STRING, qty INT64,
          entry_px NUMERIC, exit_px NUMERIC, pnl NUMERIC,
          strategy STRING, json_resp JSON );
        CREATE TABLE IF NOT EXISTS grayst0.us_trading.skipped_trades (
          ts TIMESTAMP, symbol STRING, reason STRING, snapshot JSON );
        SQL

    - name: 🖥️  Ensure compute VM
      run: |
        gcloud compute instances describe "$VM_NAME" \
          --zone "$VM_ZONE" --format='value(name)' 2>/dev/null \
        || gcloud compute instances create "$VM_NAME" \
             --zone="$VM_ZONE" --machine-type=e2-standard-2 \
             --service-account="${SA_NAME}@${PROJECT_ID}.iam.gserviceaccount.com" \
             --scopes=https://www.googleapis.com/auth/cloud-platform \
             --metadata-from-file startup-script=deploy/startup.sh

    - name: ✅  Finished
      run: echo "🎉 GCP bootstrap complete"
