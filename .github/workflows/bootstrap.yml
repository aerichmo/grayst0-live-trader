# .github/workflows/bootstrap.yml
name: GCP bootstrap & deploy

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'        # docs changes won’t re-run bootstrap

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: grayst0                # ← do not change
      VM_NAME: gs-live-trader
      VM_ZONE: us-central1-a
      SA_NAME: gs-trader
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    # ───────────────────────────────────────────────
    # Install gcloud and authenticate with your SA key
    # ───────────────────────────────────────────────
    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}
        install_components: 'beta'

    # ───────────────────────────────────────────────
    # Enable required Google Cloud APIs (idempotent)
    # ───────────────────────────────────────────────
    - name: Enable core Cloud APIs
      run: |
        gcloud services enable \
          compute.googleapis.com \
          bigquery.googleapis.com \
          secretmanager.googleapis.com \
          logging.googleapis.com

    # ───────────────────────────────────────────────
    # Create / patch the trading service-account
    # ───────────────────────────────────────────────
    - name: Ensure service-account exists
      run: |
        if ! gcloud iam service-accounts list --filter="email:${SA_NAME}@${PROJECT_ID}.iam.gserviceaccount.com" --format='value(email)'; then
          gcloud iam service-accounts create "${SA_NAME}" \
            --display-name="Graystone Trader"
        fi

    - name: Grant BigQuery dataEditor role
      run: |
        gcloud projects add-iam-policy-binding "$PROJECT_ID" \
          --member="serviceAccount:${SA_NAME}@${PROJECT_ID}.iam.gserviceaccount.com" \
          --role="roles/bigquery.dataEditor" || true

    # ───────────────────────────────────────────────
    # Store Tradier credentials in Secret Manager
    # (creates secrets only if they don’t exist)
    # ───────────────────────────────────────────────
    - name: Push Tradier secrets
      run: |
        echo -n '${{ secrets.TRADIER_TOKEN }}' | \
          gcloud secrets create tradier-token --data-file=- --replication-policy="automatic" || true
        echo -n '${{ secrets.TRADIER_ACCT }}' | \
          gcloud secrets create tradier-acct  --data-file=- --replication-policy="automatic" || true

    # ───────────────────────────────────────────────
    # Create BigQuery dataset & tables (idempotent)
    # ───────────────────────────────────────────────
    - name: Create BigQuery schema
      run: |
        bq --location=US mk -d --if_not_exists us_trading
        bq query --use_legacy_sql=false <<'SQL'
        CREATE TABLE IF NOT EXISTS grayst0.us_trading.trade_log (
          ts TIMESTAMP, symbol STRING, side STRING, qty INT64,
          entry_px NUMERIC, exit_px NUMERIC, pnl NUMERIC,
          strategy STRING, json_resp JSON );
        CREATE TABLE IF NOT EXISTS grayst0.us_trading.skipped_trades (
          ts TIMESTAMP, symbol STRING, reason STRING, snapshot JSON );
        SQL

    # ───────────────────────────────────────────────
    # Create the VM (or noop if it already exists)
    # ───────────────────────────────────────────────
    - name: Ensure VM is running
      run: |
        if ! gcloud compute instances describe "$VM_NAME" --zone "$VM_ZONE" --format='value(name)'; then
          gcloud compute instances create "$VM_NAME" \
            --zone="$VM_ZONE" \
            --machine-type=e2-standard-2 \
            --service-account="${SA_NAME}@${PROJECT_ID}.iam.gserviceaccount.com" \
            --scopes=https://www.googleapis.com/auth/cloud-platform \
            --metadata-from-file startup-script=deploy/startup.sh
        else
          echo "VM already exists – skipping create"
        fi

    - name: Bootstrap finished
      run: echo "🎉 GCP bootstrap complete — VM & infra ready"
